/**
* Layer
*
* Setting the z-index value for an element.
* Defaults to the default value set in the $layers map in _includes/_variables.
*/

@mixin layer($name: default) {
    $layer: map-get($layers, $name);

    @if $layer {
        z-index: $layer;
    } @else {
        z-index: 0;
    }
}

/**
* Container
*
* Creates a centered element with the provided max-width.
* Defaults to the site-width set in $base map in _includes/_variables.
*/

@mixin container($width: site-width) {
    margin: 0 auto;

    // max-width: 90%;
    position: relative;
    width: clamp(rem(30), rem(base($width)), 90%);

    // width: rem(base($width));

    @include layer(primary);

    @include breakpoint(phone) {
        max-width: 90%;
        padding-left: 0;
        padding-right: 0;
    }
}

@mixin object-fit($pos: 50% 50%, $fit: cover, $position: absolute) {
    bottom: 0;
    height: 100%;
    left: 0;
    object-fit: $fit;
    object-position: $pos;
    position: $position;
    right: 0;
    top: 0;
    width: 100%;
}

@mixin aspect-ratio($width, $height, $pos: 50% 50%, $fit: cover, $position: absolute, $img: true) {
    display: block;
    height: 0;
    overflow: hidden;
    padding-bottom: calc($height / $width) * 100%;
    position: relative;

    img {
        bottom: 0;
        height: 100%;
        left: 0;
        object-fit: $fit;
        object-position: $pos;
        position: $position;
        right: 0;
        top: 0;
        width: 100%;
    }
}

@mixin aspect-ratio-container($width, $height) {
    display: block;
    height: 0;
    overflow: hidden;
    padding-bottom: calc($height / $width) * 100%;
    position: relative;
}

@mixin abs($top: 0, $right: 0, $bottom: 0, $left: 0) {
    bottom: $bottom;
    left: $left;
    position: absolute;
    right: $right;
    top: $top;
}

@mixin centerer($horizontal: true, $vertical: true) {
    position: absolute;

    @if $horizontal and $vertical {
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
    } @else if $horizontal {
        left: 50%;
        transform: translate(-50%, 0);
    } @else if $vertical {
        top: 50%;
        transform: translate(0, -50%);
    }
}


@mixin fullbleed() {
    left: 50%;
    margin-left: -50vw;
    margin-right: -50vw;
    position: relative;
    right: 50%;

    // see https://css-tricks.com/full-width-containers-limited-width-parents/
    width: 100vw
}

@mixin custom-row-padding($padding) {
    margin-left: -$padding;
    margin-right: -$padding;
}

@mixin custom-col-padding($padding) {
    padding-left: $padding;
    padding-right: $padding;
}

@mixin section-padding() {
    padding: rem(100) 0;

    @include breakpoint(tablet) {
        padding: rem(50) 0;
    }

    @include breakpoint(phone) {
        padding: rem(25) 0;
    }
}